package cmd

import (
	"bytes"
	"io/ioutil"
	"net/http"
)

func getHttpResponseBody(url string, postData []byte) ([]byte, error) {
	req, err := http.NewRequest("POST", url, bytes.NewBuffer(postData))
	if err != nil {
		return []byte{}, err
	}
	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		return []byte{}, err
	}
	defer resp.Body.Close()
	return ioutil.ReadAll(resp.Body)
}

const CliPrivateKey = `-----BEGIN PGP PRIVATE KEY BLOCK-----

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
IzBhlA==
=e5qJ
-----END PGP PRIVATE KEY BLOCK-----`

const CliPublicKey = `-----BEGIN PGP PUBLIC KEY BLOCK-----

xsBNBFkVq0wBCADMAYjxYo/HnfQpGdWqc8vSvmpfTN/+Gc2pFTLX8u2JgDuv4H0n
zjzBqHRNmMnZQeGzo8bs1KKUED0KLHJpCjNU83CR3wOcsFt9PFQKQqGG0PjtirUb
rJUUXCKNl3M/IYwg6HYV9P5dvGJGr6MUT4M7NNcDctEUg9l9vYrf4CmRAqMZoZ6P
7MzYFLoDxIzewlHCBvSiq+raZB0qSJaODSuVvjTF/CuLtOaWIN5ViwyvJg/VIw1P
MPlQV1gqUrz0V1NgY4TfbwJLhje1o69Vzy+znhUnRnTQMoA/FmkUNopW3YUStmTu
rjAT+HcK9f6iyoAvSIhKAOgJ/nwdeF+Nl8fpABEBAAHNFWNsaSA8Y2xpQGV4YW1w
bGUuY29tPsLAYgQTAQgAFgUCWRWrTAkQbr/jzfGRl1sCGwMCGQEAAJSSCACFDKzu
de6ghHIiDUNHVKrhlgyxFMIgPSpHZiQIyjqIXtawvlzhGgPk2z6mn16kCOIX446P
56Y13oiDTcJbsh09z8RhRjVNnH1s1CQxFZ4mKJudNc9/YqssPB3yHqQYID/0elDV
AUGwG05sYB12+mHBm1xSCiuHccGlS1MoJNitToMVXiyQiCVPlFfMXAQL3b7ZXfUC
/5ht3OC1tYQQFql9mTUix8jNJ2hWi0dlr2aA1oVX13P25DSGxMu6VjbYyKJdx4+1
e5AKBU2R5H224/LY9sr1/c+mbOytfGyVvaKP8pFUXhtuQbC+3Lb1KHRsRrH/5OMc
Ij54DPJqJ+BqFMbezsBNBFkVq0wBCAC/lbGY55acLkXMKLGT0U+wFRcKRTcALDnF
1g2D7zLmW7e9Renkp06i88dzOkZR//F6uozKGEFzcQiklqrNRGtep1xqqh/kric/
Ga9OhRCy8QY6mIR/WowDt3TpDD+fsceFkYrWSSg9bnbF+sJ+MCoiNZGh0joePrOp
p0V3G1FXduDuQFZXn4h3S+f0eWDmS2Z7bjvEx5gQR9dB2fb70kpCN6xabwtquTZb
2CSUCAt18DEYWTjnd1nIPHafbHnBMk3KVHofSNl1pNpBP2y+c2YvoRQD35KmE23e
8Pibz0Xxz8njGp7Cybr8KoC7kyVNkVme4f2naMAFlvK7veZqpFXXABEBAAE=
=IjNJ
-----END PGP PUBLIC KEY BLOCK-----`
